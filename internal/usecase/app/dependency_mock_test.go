// Code generated by MockGen. DO NOT EDIT.
// Source: dependency.go

// Package app is a generated GoMock package.
package app

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/patricksungkharisma/go-starter/internal/entity"
)

// MockappRepo is a mock of appRepo interface.
type MockappRepo struct {
	ctrl     *gomock.Controller
	recorder *MockappRepoMockRecorder
}

// MockappRepoMockRecorder is the mock recorder for MockappRepo.
type MockappRepoMockRecorder struct {
	mock *MockappRepo
}

// NewMockappRepo creates a new mock instance.
func NewMockappRepo(ctrl *gomock.Controller) *MockappRepo {
	mock := &MockappRepo{ctrl: ctrl}
	mock.recorder = &MockappRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockappRepo) EXPECT() *MockappRepoMockRecorder {
	return m.recorder
}

// GetExampleDataDB mocks base method.
func (m *MockappRepo) GetExampleDataDB(ctx context.Context, id int64) (entity.GetExampleResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExampleDataDB", ctx, id)
	ret0, _ := ret[0].(entity.GetExampleResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetExampleDataDB indicates an expected call of GetExampleDataDB.
func (mr *MockappRepoMockRecorder) GetExampleDataDB(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExampleDataDB", reflect.TypeOf((*MockappRepo)(nil).GetExampleDataDB), ctx, id)
}
