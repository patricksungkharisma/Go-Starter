// Code generated by MockGen. DO NOT EDIT.
// Source: dependency.go

// Package app_test is a generated GoMock package.
package app_test

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/patricksungkharisma/go-starter/internal/entity"
	error "github.com/patricksungkharisma/go-starter/internal/error"
)

// MockAppRepo is a mock of AppRepo interface.
type MockAppRepo struct {
	ctrl     *gomock.Controller
	recorder *MockAppRepoMockRecorder
}

// MockAppRepoMockRecorder is the mock recorder for MockAppRepo.
type MockAppRepoMockRecorder struct {
	mock *MockAppRepo
}

// NewMockAppRepo creates a new mock instance.
func NewMockAppRepo(ctrl *gomock.Controller) *MockAppRepo {
	mock := &MockAppRepo{ctrl: ctrl}
	mock.recorder = &MockAppRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAppRepo) EXPECT() *MockAppRepoMockRecorder {
	return m.recorder
}

// GetExampleDataDB mocks base method.
func (m *MockAppRepo) GetExampleDataDB(ctx context.Context, id int64) (*entity.GetExampleResponse, *error.TemplateError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExampleDataDB", ctx, id)
	ret0, _ := ret[0].(*entity.GetExampleResponse)
	ret1, _ := ret[1].(*error.TemplateError)
	return ret0, ret1
}

// GetExampleDataDB indicates an expected call of GetExampleDataDB.
func (mr *MockAppRepoMockRecorder) GetExampleDataDB(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExampleDataDB", reflect.TypeOf((*MockAppRepo)(nil).GetExampleDataDB), ctx, id)
}
