// Code generated by MockGen. DO NOT EDIT.
// Source: dependency.go

// Package app_test is a generated GoMock package.
package app_test

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/patricksungkharisma/go-starter/internal/entity"
	error "github.com/patricksungkharisma/go-starter/internal/error"
)

// MockAppUsecase is a mock of AppUsecase interface.
type MockAppUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockAppUsecaseMockRecorder
}

// MockAppUsecaseMockRecorder is the mock recorder for MockAppUsecase.
type MockAppUsecaseMockRecorder struct {
	mock *MockAppUsecase
}

// NewMockAppUsecase creates a new mock instance.
func NewMockAppUsecase(ctrl *gomock.Controller) *MockAppUsecase {
	mock := &MockAppUsecase{ctrl: ctrl}
	mock.recorder = &MockAppUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAppUsecase) EXPECT() *MockAppUsecaseMockRecorder {
	return m.recorder
}

// GetExampleData mocks base method.
func (m *MockAppUsecase) GetExampleData(ctx context.Context, req entity.GetExampleRequest) (*entity.GetExampleResponse, *error.TemplateError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExampleData", ctx, req)
	ret0, _ := ret[0].(*entity.GetExampleResponse)
	ret1, _ := ret[1].(*error.TemplateError)
	return ret0, ret1
}

// GetExampleData indicates an expected call of GetExampleData.
func (mr *MockAppUsecaseMockRecorder) GetExampleData(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExampleData", reflect.TypeOf((*MockAppUsecase)(nil).GetExampleData), ctx, req)
}
